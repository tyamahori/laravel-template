version: '3.9'

services:
  web:
    ports:
      - "${LOCAL_IP}:443:443"
      - "${LOCAL_IP}:80:80"
    image: nginx:1.17.9-alpine
    container_name: ${COMPOSE_PROJECT_NAME}-${WEB_SUFFIX}
    working_dir: /opt/${PROJECT_DOMAIN}
    environment:
      - PROJECT_DOMAIN=${PROJECT_DOMAIN}
    command: >
      /bin/sh -c
      "envsubst '
      $$PROJECT_DOMAIN
      '< /etc/nginx/conf.d/default.conf.template
      > /etc/nginx/conf.d/default.conf
      && nginx -g 'daemon off;'"
    volumes:
      # file
      - ./nginx/default.conf.template:/etc/nginx/conf.d/default.conf.template
      - ./nginx/ssl/cert.pem:/etc/ssl/certs/cert.pem
      - ./nginx/ssl/key.pem:/etc/ssl/certs/key.pem
      # volume
      - tyamahori-socket:/var/run/php-fpm
      - tyamahori-schemaspy:/opt/schema
      - tyamahori-public:/opt/${PROJECT_DOMAIN}/public
    depends_on:
      - app
    networks:
      default:
        aliases:
          - ${PROJECT_DOMAIN}

  app:
    build:
      context: ../..
      dockerfile: ./docker/mac/php/Dockerfile
      args:
        - PROJECT_DOMAIN=${PROJECT_DOMAIN}
    container_name: ${COMPOSE_PROJECT_NAME}-${APP_SUFFIX}
    volumes:
      # directories
      - ../../src/app:/opt/${PROJECT_DOMAIN}/app
      - ../../src/bootstrap:/opt/${PROJECT_DOMAIN}/bootstrap
      - ../../src/config:/opt/${PROJECT_DOMAIN}/config
      - ../../src/database:/opt/${PROJECT_DOMAIN}/database
      - ../../src/package:/opt/${PROJECT_DOMAIN}/package
      - ../../src/resources:/opt/${PROJECT_DOMAIN}/resources
      - ../../src/routes:/opt/${PROJECT_DOMAIN}/routes
      - ../../src/tests:/opt/${PROJECT_DOMAIN}/tests
      # files
      - ../../src/.styleci.yml:/opt/${PROJECT_DOMAIN}/.styleci.yml
      - ../../src/artisan:/opt/${PROJECT_DOMAIN}/artisan
      - ../../src/composer.json:/opt/${PROJECT_DOMAIN}/composer.json
      - ../../src/composer.lock:/opt/${PROJECT_DOMAIN}/composer.lock
      - ../../src/phpunit.xml:/opt/${PROJECT_DOMAIN}/phpunit.xml
      - ../../src/server.php:/opt/${PROJECT_DOMAIN}/server.php
      # volumes
      - tyamahori-vendor:/opt/${PROJECT_DOMAIN}/vendor
      - tyamahori-storage:/opt/${PROJECT_DOMAIN}/storage
      - tyamahori-socket:/var/run/php-fpm
      - tyamahori-public:/opt/${PROJECT_DOMAIN}/public
    working_dir: /opt/${PROJECT_DOMAIN}
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - mail
      - s3

  schemaspy:
    container_name: ${COMPOSE_PROJECT_NAME}-${SCHEMA_SUFFIX}
    image: schemaspy/schemaspy:snapshot
    working_dir: /app
    volumes:
      - tyamahori-schemaspy:/output
    depends_on:
      - db
    command: >
      -t pgsql
      -u "${DB_USERNAME}"
      -host "${COMPOSE_PROJECT_NAME}-${DB_SUFFIX}"
      -port "${DB_PORT}"
      -db "${DB_DATABASE}"
      -p "${DB_PASSWORD}"
      -s "${DB_SCHEMA}"
    profiles:
      - schema

  db:
    image: postgres:13.4-alpine
    container_name: ${COMPOSE_PROJECT_NAME}-${DB_SUFFIX}
    volumes:
      # file
      - ./postgre/sql/setup.sql:/docker-entrypoint-initdb.d/setup.sql
      # volumes
      - tyamahori-db:/var/lib/postgresql/data
    ports:
      - "${LOCAL_IP}:5432:5432"
    env_file:
      - .env

  redis:
    image: redis:6.0-alpine
    container_name: ${COMPOSE_PROJECT_NAME}-${REDIS_SUFFIX}
    volumes:
      - tyamahori-redis:/data
    command: redis-server --appendonly yes
    env_file:
      - .env
    ports:
      - "${LOCAL_IP}:6379:6379"

  mail:
    image: mailhog/mailhog
    container_name: ${COMPOSE_PROJECT_NAME}-${MAIL_SUFFIX}

  bucket:
    image: minio/mc
    container_name: ${COMPOSE_PROJECT_NAME}-${BUCKET_SUFFIX}
    depends_on:
      - s3
    entrypoint: >
      /bin/sh -c "
      until (mc config host add myminio http://${COMPOSE_PROJECT_NAME}-${S3_SUFFIX}:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY}) do echo '...waiting...' && sleep 1; done;
      mc mb myminio/${AWS_BUCKET};
      mc policy set public myminio/${AWS_BUCKET};
      exit 0;
      "
    profiles:
      - bucket


  s3:
    image: minio/minio:latest
    container_name: ${COMPOSE_PROJECT_NAME}-${S3_SUFFIX}
    env_file:
      - .env
    command: server /export --console-address ":9001"
    volumes:
      - tyamahori-s3:/export
      - tyamahori-s3-config:/root/.minio

networks:
  default:
    external: true
    name: ${NETWORK_NAME}

volumes:
  tyamahori-vendor:
    name: ${COMPOSE_PROJECT_NAME}-vendor
  tyamahori-storage:
    name: ${COMPOSE_PROJECT_NAME}-storage
  tyamahori-redis:
    name: ${COMPOSE_PROJECT_NAME}-redis
  tyamahori-db:
    name: ${COMPOSE_PROJECT_NAME}-db
  tyamahori-socket:
    name: ${COMPOSE_PROJECT_NAME}-socket
  tyamahori-schemaspy:
    name: ${COMPOSE_PROJECT_NAME}-schemaspy
  tyamahori-node:
    name: ${COMPOSE_PROJECT_NAME}-node
  tyamahori-public:
    name: ${COMPOSE_PROJECT_NAME}-public
  tyamahori-s3:
    name: ${COMPOSE_PROJECT_NAME}-s3
  tyamahori-s3-config:
    name: ${COMPOSE_PROJECT_NAME}-s3-config
